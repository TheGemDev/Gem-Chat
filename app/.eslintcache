[{"C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\index.js":"1","C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\reportWebVitals.js":"2","C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\App.js":"3","C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\pages\\chatRoom.js":"4","C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\services\\firebase\\firebase.js":"5","C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\components\\TextArea.js":"6","C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\components\\pageHeader.js":"7","C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\components\\signIn.js":"8","C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\components\\messageInput.js":"9"},{"size":500,"mtime":1609330073573,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1606514346749,"results":"12","hashOfConfig":"11"},{"size":4054,"mtime":1610114169516,"results":"13","hashOfConfig":"11"},{"size":2179,"mtime":1610048758705,"results":"14","hashOfConfig":"15"},{"size":604,"mtime":1610048417545,"results":"16","hashOfConfig":"15"},{"size":1703,"mtime":1610027086366,"results":"17","hashOfConfig":"15"},{"size":198,"mtime":1610113992824,"results":"18","hashOfConfig":"11"},{"size":793,"mtime":1610049611105,"results":"19","hashOfConfig":"15"},{"size":1045,"mtime":1610105425150,"results":"20","hashOfConfig":"15"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1prpj7m",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"1w1fwub",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},"C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\index.js",[],"C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\reportWebVitals.js",[],"C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\App.js",["44"],"C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\pages\\chatRoom.js",["45"],"import React, {useRef, useState} from 'react';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport { Form, Button, Input} from 'antd';\r\n\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/analytics';\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\nconst analytics = firebase.analytics();\r\n\r\n\r\nfunction ChatRoom() {\r\n  const dummy = useRef();\r\n  const messagesRef = firestore.collection('messages');\r\n  const query = messagesRef.orderBy('createdAt').limit(500);\r\n\r\n  const [messages] = useCollectionData(query, { idField: 'id' });\r\n\r\n  const [formValue, setFormValue] = useState('');\r\n\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { uid, photoURL } = auth.currentUser;\r\n\r\n    await messagesRef.add({\r\n      text: formValue,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      uid,\r\n      photoURL\r\n    })\r\n\r\n    setFormValue('');\r\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n\r\n  return (<>\r\n    <main>\r\n\r\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\r\n\r\n      <span ref={dummy}></span>\r\n\r\n    </main>\r\n\r\n    <Form onSubmit={sendMessage} layout='inline'>\r\n      <Input \r\n      id=\"outlined-basic\" \r\n      label=\"message\"\r\n      placeHolder='hello' \r\n      enterButton\r\n      value={formValue} \r\n      onChange={(e) => setFormValue(e.target.value)} \r\n      />\r\n       <Button className=\"sign-out\" disabled={!formValue} type=\"submit\">SEND</Button>\r\n      \r\n      {/*<IconButton type=\"submit\" disabled={!formValue} variant=\"contained\" color=\"primary\" disableElevation multiline rows={4}><SendIcon /></IconButton>*/}\r\n    </Form>\r\n </>)\r\n};\r\n\r\nfunction ChatMessage(props) {\r\n  const { text, uid, photoURL } = props.message;\r\n\r\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\r\n\r\n  return (<>\r\n    <div className={`message ${messageClass}`}>\r\n      <img alt={'img'} src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'}  />\r\n      <p>{text}</p>\r\n    </div>\r\n  </>)\r\n}\r\n\r\nexport { \r\n  ChatRoom,\r\n  ChatMessage\r\n}\r\n",["46","47"],"C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\services\\firebase\\firebase.js",[],"C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\components\\TextArea.js",[],["48","49"],"C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\components\\pageHeader.js",[],"C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\components\\signIn.js",["50","51","52","53"],"import React, { useRef, useState } from 'react';\r\nimport { Button } from 'antd';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/analytics';\r\n\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\n\r\nfirebase.initializeApp()\r\n\r\n\r\nconst auth = firebase.auth();\r\n\r\n\r\nexport default function SignIn() {\r\n\r\n    const signInWithGoogle = () => {\r\n      const provider = new firebase.auth.GoogleAuthProvider();\r\n      auth.signInWithPopup(provider);\r\n    }\r\n  \r\n    return (\r\n      <>\r\n        <Button className=\"sign-in\" onClick={signInWithGoogle} type=\"primary\">Sign in with Google</Button>\r\n        <p>A Free Chat App</p>\r\n      </>\r\n    )\r\n  \r\n  }\r\n  ","C:\\Users\\Unekwu\\Documents\\GitHub\\Gem-Chat\\app\\src\\components\\messageInput.js",["54","55","56"],"// this would be available in future updates\r\n\r\n\r\nimport React, {useState, useRef} from 'react';\r\nimport {Input, Form, Button} from 'antd';\r\n\r\nconst layout = {\r\n    labelCol: { span: 100},\r\n    wrapperCol: { span: 100},\r\n};\r\n\r\n//available in future updates\r\n\r\n/*const tailLayout = {\r\n   wrapperCol:  {offset: 1, span: 100 }\r\n};*/\r\n\r\n\r\nconst FormItem = Form.Item;\r\n\r\n//export this in the future\r\n\r\nfunction Messageinput() {\r\n    \r\n    return (\r\n    <Form \r\n    style={{position: 'sticky', bottom: '0'}}\r\n    {...layout}\r\n    layout='inline'\r\n    onFinish={console.log('done')}\r\n    >\r\n        <FormItem name='title' style={{width: '80%', marginBottom: 0, marginRight: 0 }} >\r\n        <Input \r\n        placeholder='hello'\r\n        //value={!formValue}\r\n        />\r\n        </FormItem>\r\n        <FormItem /*{...tailLayout}*/ style={{marginBottom: 0, marginRight: 0, width: '20%' }}>\r\n        <Button \r\n        type='primary'\r\n        htmlType='submit'\r\n        //disabled={!formValue}\r\n        >Send</Button>\r\n        </FormItem>\r\n    </Form>\r\n)\r\n}",{"ruleId":"57","severity":1,"message":"58","line":31,"column":7,"nodeType":"59","messageId":"60","endLine":31,"endColumn":16},{"ruleId":"57","severity":1,"message":"58","line":12,"column":7,"nodeType":"59","messageId":"60","endLine":12,"endColumn":16},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"61","replacedBy":"65"},{"ruleId":"63","replacedBy":"66"},{"ruleId":"57","severity":1,"message":"67","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":23},{"ruleId":"57","severity":1,"message":"68","line":1,"column":25,"nodeType":"59","messageId":"60","endLine":1,"endColumn":33},{"ruleId":"57","severity":1,"message":"69","line":9,"column":10,"nodeType":"59","messageId":"60","endLine":9,"endColumn":22},{"ruleId":"57","severity":1,"message":"70","line":10,"column":10,"nodeType":"59","messageId":"60","endLine":10,"endColumn":27},{"ruleId":"57","severity":1,"message":"68","line":4,"column":16,"nodeType":"59","messageId":"60","endLine":4,"endColumn":24},{"ruleId":"57","severity":1,"message":"67","line":4,"column":26,"nodeType":"59","messageId":"60","endLine":4,"endColumn":32},{"ruleId":"57","severity":1,"message":"71","line":23,"column":10,"nodeType":"59","messageId":"60","endLine":23,"endColumn":22},"no-unused-vars","'analytics' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["72"],"no-negated-in-lhs",["73"],["72"],["73"],"'useRef' is defined but never used.","'useState' is defined but never used.","'useAuthState' is defined but never used.","'useCollectionData' is defined but never used.","'Messageinput' is defined but never used.","no-global-assign","no-unsafe-negation"]